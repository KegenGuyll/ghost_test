version: "3.6"
volumes:
  ghostdb:
  ghostdata:
services:

  nextjs:
  container_name: nextjs_container
    build: ./
    restart: always
    expose: 
      - 3000
    environment:
      VIRTUAL_HOST: localhost
  
  ghostapp:
    container_name: ghost_container
    depends_on: 
      - mysqldb
    image: ghost:3.12.1-alpine
    restart: always
    expose: 
      - 2368
    volumes:
      - type: bind
        source: ${GHOST_DATA} 
        target: /var/lib/ghost/content
    environment:
      - VIRTUAL_HOST=ghost.localhost
      - database__client=mysql
      - database__connection__host=mysqldb
      - database__connection__user=${MYSQL_USER}
      - database__connection__password=${MYSQL_PASSWORD}
      - database__connection__database=${MYSQL_DATABASE}
      

  mysqldb:
    container_name: mysql_container
    image: mysql/mysql-server:5.7.21
    restart: always
    volumes:
      - type: bind
        source: ${MYSQL_DATA}
        target: /var/lib/mysql
      - type: bind
        source: ${MYSQL_BACKUP_DIR}
        target: /var/lib/blog/backups
    env_file:
      - .env

  nginx-proxy:
    container_name: nginx_container
    restart: always
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs"
    depends_on: 
      - ghostapp
      - nextjs

  letsencrypt-nginx-proxy-companion:
    container_name: letsencrypt
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"
